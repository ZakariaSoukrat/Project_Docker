version: '3.8'

services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - vote1
      - vote2
      - result
    networks:
      - front-net

  vote1:
    build: ./vote
    environment:
      - REDIS_HOST=redis
    ports:
      - "5000:5000" #exposed for testing locally
    depends_on:
      - redis
    networks:
      - front-net
      - back-net

  vote2:
    build: ./vote
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - front-net
      - back-net

  result:
    build: ./result
    environment:
      - DB_HOST=db
    ports:
      - "4000:4000"
    depends_on:
      - db
    networks:
      - front-net
      - back-net

  seed:
    build: ./seed-data
    depends_on:
      - db
      - nginx
    networks:
      - front-net

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - DB_HOST=db
    depends_on:
      - redis
      - db
    networks:
      - back-net

  redis:
    image: redis:latest
    volumes:
      - ./healthchecks:/healthchecks
    healthcheck:
      test: ["CMD", "sh", "/healthchecks/redis.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - back-net

  db:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=votes
    volumes:
      - ./healthchecks:/healthchecks
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "sh", "/healthchecks/postgres.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - back-net

volumes:
  db-data:

networks:
  front-net:
  back-net:
    driver: bridge
